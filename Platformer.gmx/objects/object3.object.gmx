<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// intialize

//our own for more control
_friction = 2;
_gravity = 3;
_hspeed = 0;
_vspeed = 0;

on_ground = false;

///powerups
move_speed = 10;
jump_speed = 23;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// handle movement

right = keyboard_check(vk_right);
left = keyboard_check(vk_left);
space = keyboard_check_pressed(vk_space);

max_gravity = 15;

if (left) {
    _hspeed = -move_speed;
    image_xscale = -1;
    }

if (right) {
    _hspeed = move_speed;
         image_xscale = 1
}

if (left and right) {
    _hspeed = 0;
     }
     
if (not left and not right and on_ground) {
        _hspeed -= sign(_hspeed) * _friction;
        }
        
if (_vspeed &lt; max_gravity) _vspeed += _gravity;
        
if (place_meeting(x,y+1,Block)) {
     on_ground = true;
     _vspeed = space * -jump_speed
    } else {
    on_ground = false;
}

if ( place_meeting (x+_hspeed,y ,Block) ) {
   while ( not place_meeting(x+sign(_hspeed),y,Block) ) { 
   x += sign(_hspeed);
   }
   _hspeed = 0;
}
 x += _hspeed
 
 if (place_meeting(x, y+_vspeed, Block) ) {
    while ( not place_meeting (x,y+sign(_vspeed), Block) ) {
        y += sign(_vspeed);
        }
        _vspeed = 0;
}

y += _vspeed;

if (_hspeed == 0) {
    sprite_index = spr_facing;
} else {
    sprite_index = sprite1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
